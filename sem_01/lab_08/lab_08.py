'''Лабораторная работа №8
   "Вычисление интегралов"

   Назначение:
   1)вычилить интеграл для двух значений количества
     участков разбиения методом Буля и методом
     правых прямоугольников;
   2)вычислить интеграл с заданной точностью для наименее
     точного метода
   3)определить относительную и абсолютную ошибку.
   
   Переменные, используемые в программе:
   a,b -- пределы интегрирования;
   n1,n2, ch, n -- количество участков разбиения;
   Ip1, Ip2, Ip -- значения интегралов по методу правых прямоугольников;
   Q1, Q2, Q -- значения интегралов по методу Буля;
   y, x -- аргумент и значение функции;
   ist -- точное значение интеграла;
   eps -- точность вычислений;
   men, bol -- текущие значения интегралов;
   absmis, otnmis -- абсолютная и относильеная ошибка.

   Тестовый пример:
   Входные данные:
   -1
   1
   4
   8
   1e-4
   Выходные данные:
   ┌─────────────────┬──────────────────┬──────────────────┐
   │     Метод       │  n1 =     4      │  n2 =     8      │
   ├─────────────────┼──────────────────┼──────────────────┤
   │     Правых      │     0.75000000   │     0.68750000   │
   │ прямоугольников │                  │                  │
   ├─────────────────┼──────────────────┼──────────────────┤
   │     Буля        │     0.66666667   │     0.66666667   │
   └─────────────────┴──────────────────┴──────────────────┘

   Наименее точный -- метод правых прямоугольников.
   Интеграл с заданной точностью: 0.66674805
   Заданная точность достигается при 128 участках разбиения.
   Точное значение интеграла:  0.66666667

   Абсолютная ошибка вычисления интеграла:   0.000081
   Относительная ошибка вычисления интеграла:   0.000122
'''
from math import sin

#функция для нахождения интеграла
def function(x):
    func = x*x
    return func

#метод правых прямоугольников
def rightrect(n):
    Ip = 0
    h = (b - a) / n
    x0 = a + h
    xn1 = b
    while x0 < xn1 + h / 2:
        y = function(x0)
        Ip += y
        x0 += h
    Ip *= h
    return Ip

#метод Буля
def buhl(n):
    h = (b - a) / n
    x0 = a
    ym = [0] * 5
    Q = 0
    for i in range(n // 4):
        for i in range(5):
            ym[i] = function(x0)
            if i != 4:
                x0 += h
        Q += 7 * ym[0] + 32 * ym[1] + 12 * ym[2] + 32 * ym[3] + 7 * ym[4]
    Q *= 2 * h / 45
    return Q


def out1(ch):
    if ch < 100:
        print('  {:11.8f}   │'.format(ch), end='')
    elif ch < 10000:
        print('  {:11.6f}   │'.format(ch), end='')
    else:
        print('  {:11.2e}   │'.format(ch), end='')


def out2(ch):
    if ch < 100:
        print('    {:11.8f}   │'.format(ch))
    elif Q2 < 10000:
        print('    {:11.6f}   │'.format(ch))
    else:
        print('    {:11.2e}   │'.format(ch))




print('Вычисление инегралов методом правых прямоугольников и методом Буля.')
a = float(input('Введите нижний предел интегрирования: '))
b = float(input('Введите верхний предел интегрирования: '))
print('Введите два значения количества участков разбиения\n'
      '(n1 и n2 кратны 4 для вычисления по методу Буля): ')
n1 = int(input('n1 = '))
n2 = int(input('n2 = '))

if b < a or n1 % 4 != 0 or n2 % 4 != 0 or n1 < 0 or n2 < 0:
    print('Неверные входные данные!')
else:
    # метод правых прямоугольников
    Ip1 = rightrect(n1)
    Ip2 = rightrect(n2)

    # метод Буля
    Q1 = buhl(n1)
    Q2 = buhl(n2)

    # вывод таблицы
    print()
    print('┌─────────────────┬──────────────────┬──────────────────┐')
    print('│     Метод       │  n1 = {:^9d}  │  n2 = {:^9d}  │'.format(n1, n2))
    print('├─────────────────┼──────────────────┼──────────────────┤')
    print('│     Правых      │  ', end='')
    out1(Ip1)
    out2(Ip2)
    print('│ прямоугольников │                  │                  │')
    print('├─────────────────┼──────────────────┼──────────────────┤')
    print('│     Буля        │  ', end='')
    out1(Q1)
    out2(Q2)
    print('└─────────────────┴──────────────────┴──────────────────┘')

    ist = b*b*b/3 - a*a*a/3 
    
    eps = float(input('Введите точность вычисления интеграла для наименее'
                      ' точного метода: '))
    if abs(ist - Q2) < abs(ist - Ip2):
        print()
        print('Наименее точный -- метод правых прямоугольников.')
        n = 1
        men = rightrect(n)
        bol = rightrect(2*n)
        while abs(bol - men) > eps:
            n *= 2
            men = bol
            bol = rightrect(2*n)
            
        print('Интеграл с заданной точностью:', end = '')
        if men < 100:
            print('{:11.8f}'.format(men))
        elif men < 10000:
            print('{:11.6f}'.format(men))
        else:
            print('{:11.2e}'.format(men))
        print('Заданная точность достигается при', n, 'участках разбиения.')
        
        print('Точное значение интеграла:', end = ' ')
        if ist < 100:
            print('{:11.8f}'.format(ist))
        elif ist < 10000:
            print('{:11.6f}'.format(ist))
        else:
            print('{:11.2e}'.format(ist))
            
        absmis = abs(ist - men)
        otnmis = abs(1 - men/ist)
        print()
        print('Абсолютная ошибка вычисления интеграла:', '{:11.6f}'.format(absmis))
        print('Относительная ошибка вычисления интеграла:', '{:11.6f}'.format(otnmis))
    else:
        print()
        print('Наименее точный -- метод Буля.')
        n = 1
        men = buhl(n)
        bol = buhl(2 * n)
        while abs(bol - men) > eps:
            n *= 2
            men = bol
            bol = buhl(2*n)
            
        print('Интеграл с заданной точностью:', end = '')
        if men < 100:
            print('{:11.8f}'.format(men))
        elif men < 10000:
            print('{:11.6f}'.format(men))
        else:
            print('{:11.2e}'.format(men))
        print('Заданная точность достигается при', n, 'участках разбиения.')
        
        print('Точное значение интеграла:', end = ' ')
        if ist < 100:
            print('{:11.8f}'.format(ist))
        elif ist < 10000:
            print('{:11.6f}'.format(ist))
        else:
            print('{:11.2e}'.format(ist))
            
        absmis = abs(ist - men)
        otnmis = abs(1 - men/ist)
        print()
        print('Абсолютная ошибка вычисления интеграла:', '{:11.6f}'.format(absmis))
        print('Относительная ошибка вычисления интеграла:', '{:11.6f}'.format(otnmis))
