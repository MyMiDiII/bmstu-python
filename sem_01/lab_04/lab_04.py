'''Лаборатоная работа №4
   "График функции"

   Назначение: по заданным начальному и конечному значению
   аргумента, шагу и количеству засечек на оси Od изображается
   график функции.

   Переменные используемые в программе:
   y, d -- аргумент и значение функции;
   zas -- количество засечек на оси Оd;
   fn, ln -- первое и последнее значение аргумета;
   step -- шаг;
   ykv, ykb -- квадрат и куб аргумента;
   d_min, d_max -- минимальное и максимальное значение функции;
   nl, np -- длина промежутка и их количество -1;
   m, m0 -- удалённость точки или нуля от левой границы графика;
   i, j -- счетчики для определения максимума, минимума, прохода по длине оси Od.
   

   Тестовый пример:
   Входные данные:
   1 2
   1
   4
   Выходные данные:
      -0.00620                -0.00296                 0.00029                  0.00380
    y     ├───────────────────────┼───────────────────────┼─────────────────────────┤
     1.00 *                                            │                             
     2.00                                              │                            *
'''


fn, ln = map(float,
            input('Введите первое и последнее значение аргумента: ').split())
step = float(input('Введите шаг: '))
zas = int(input('Введите количество засечек на оси Od (от 4 до 8): '))


#поиск максимального и минимального значения функции
y = fn
i = 0
while y < ln + step/2:
    ykv = y*y
    ykb = ykv*y
    d = ykv*ykb - 7.9*ykv*ykv + 24.46*ykb - 37.074*ykv + 27.512*y - 8.0042
    
    if i == 0:
        i += 1
        d_max = d
        d_min = d
    else:
        if d > d_max:
            d_max = d
        if d < d_min:
            d_min = d

    y += step

#вывод оси Od с засечками и значениями над ними
nl = 73//(zas-1)
np = zas-2
kpz = 0
j = 0
while i < 85:
    if i == 7 + nl*kpz and kpz != zas-1:
        x = (i - 7)*(d_max-d_min)/74 + d_min
        if -10000 < x < 10000:
            print('{:8.2f}'.format(x), end ='')
        else:
            print('{:8.1e}'.format(x), end = '')
        kpz += 1
        i += 8
    elif i == 80:
        x = (d_max - d_min) + d_min
        if -10000 < x < 10000:
            print('{:8.2f}'.format(x), end = '')
        else:
            print('{:8.1e}'.format(x), end = '')
        kpz += 1
        i += 8
    else:
        i += 1
        print(' ', end = '')
print()
print('    y     ','├',('─'*(nl-1)+'┼')*np,'─'*(73-nl*np),'┤',sep = '')

m0 = int(-d_min/(d_max - d_min)*74)+1

#вывод графика функции
y = fn
while y < ln + step/2:
        ykv = y*y
        ykb = ykv*y
        d = ykv*ykb - 7.9*ykv*ykv + 24.46*ykb - 37.074*ykv + 27.512*y - 8.0042

        m = int((d - d_min)/(d_max - d_min)*74)+1

        print(' {:8.2f} '.format(y), end = '')
        if  0 < m0 < 75:
            if m0 < m:
                print(' '*(m0-1),'│', ' '*(m-m0-1), '*', ' '*(75-m), sep='')
            elif m0 > m:
                print(' '*(m-1),'*', ' '*(m0-m-1), '│', ' '*(75-m0), sep='')
            else:
                print(' '*(m-1), '*', ' '*(75-m), sep='')
        else:
            print(' '*(m-1), '*', ' '*(75-m), sep = '')

        y += step
